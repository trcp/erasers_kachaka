services:
  kachaka_bridge_main:
    container_name: kachaka-bridge-main
    image: "asia-northeast1-docker.pkg.dev/kachaka-api/docker/kachaka-grpc-ros2-bridge:${TAG_MAIN}"
    network_mode: "host"
    ipc: "host"
    pid: "host"
    environment:
      - GRPC_PORT
      - ROS_DOMAIN_ID
      - ROS_LOCALHOST_ONLY
      - ROS_LOG_DIR=/tmp
      - RMW_IMPLEMENTATION
      - USER_ID
      - GROUP_ID
      - KACHAKA_IP
      - API_GRPC_BRIDGE_SERVER_URI="${KACHAKA_IP}:${GRPC_PORT}"
    user: "${USER_ID}:${GROUP_ID}"
    command: >
      ros2 launch kachaka_grpc_ros2_bridge grpc_ros2_bridge.launch.xml server_uri:=${API_GRPC_BRIDGE_SERVER_URI}

  kachaka_bridge_trcp:
    container_name: kachaka-bridge-trcp
    image: "asia-northeast1-docker.pkg.dev/kachaka-api/docker/kachaka-grpc-ros2-bridge:${TAG_TRCP}"
    network_mode: "host"
    ipc: "host"
    pid: "host"
    environment:
      - GRPC_PORT
      - ROS_DOMAIN_ID
      - ROS_LOCALHOST_ONLY
      - ROS_LOG_DIR=/tmp
      - RMW_IMPLEMENTATION
      - USER_ID
      - GROUP_ID
      - KACHAKA_IP
      - API_GRPC_BRIDGE_SERVER_URI="${KACHAKA_IP}:${GRPC_PORT}"
    user: "${USER_ID}:${GROUP_ID}"
    #command: ros2 launch kachaka_grpc_ros2_bridge grpc_ros2_bridge.trcp.launch.xml server_uri:=${API_GRPC_BRIDGE_SERVER_URI}
    command: ros2 launch kachaka_grpc_ros2_bridge grpc_ros2_bridge.trcp_devel.launch.xml server_uri:=${API_GRPC_BRIDGE_SERVER_URI}
